[agent]
  # number of metrics to wait before writing to outputs
  # note: 10k size is half as frequent, but the write duration also doubles
  metric_batch_size = 5000
  # maximum number of cached metrics before dumping old data
  metric_buffer_limit = 10000
  # increased flush interval - allow time to write all metrics to load balancer
  flush_interval = "15s"
  # don't include hostname, since it's just the container ID
  omit_hostname = true
  # uncomment for additional debug messages
  debug = false
  quiet = false
  
## input plugins

# Cisco MDT - for IOS-XE, XR, NXOS
# docs here: https://github.com/influxdata/telegraf/tree/master/plugins/inputs/cisco_telemetry_mdt
[[inputs.cisco_telemetry_mdt]]
  transport = "tcp"
  service_address = ":57000"
  # set aliases/rename measurements since the paths may change over different IOS-XR versions
  [inputs.cisco_telemetry_mdt.aliases]
    optics-info = "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-lanes/optics-lane"
    generic-counters = "Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/generic-counters"
    data-rate = "Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/data-rate"
    interfaces = "Cisco-IOS-XR-pfi-im-cmd-oper:interfaces/interfaces/interface"
  # ignore NEW-* or *-NEW routers since they're temporary
  [inputs.cisco_telemetry_mdt.tagdrop]
    source = ["NEW-*", "*-NEW"]

## processor plugins
[[processors.converter]]
  # exclude some extra fields we aren't analyzing
  fielddrop = ["extended_alarm_alarm_info*", "ext_param_threshold_val*"]
  [processors.converter.fields]
    # convert optics *is_detected fields from a string to a boolean, since they're always true or false
    boolean = ["*is_detected"]

## output plugins

# Local InfluxDB database - "fast" metrics
[[outputs.influxdb]]
  alias = "metrics"
  # write to the metrics database
  database = "metrics"
  # send data to the loadbalancer container instead of directly to the database
  urls = [ "http://database:8086" ]
  # compress data going to InfluxDB - makes no difference on Telegraf CPU performance
  content_encoding = "gzip"
  # timeout for http writes
  timeout = "20s"
  # note: you can also pass in username/PW with environment variables to keep them secret
  username = "${INFLUXDB_WRITE_USER}"
  password = "${INFLUXDB_WRITE_USER_PASSWORD}"
  [outputs.influxdb.tagpass]
    subscription = ["fast*"]

# Local InfluxDB database - "slow" metrics/health info
[[outputs.influxdb]]
  alias = "health"
  # write to the health database
  database = "health"
  # send data to the loadbalancer container instead of directly to the database
  urls = [ "http://database:8086" ]
  # compress data going to InfluxDB - makes no difference on Telegraf CPU performance
  content_encoding = "gzip"
  # timeout for http writes
  timeout = "20s"
  # note: you can also pass in username/PW with environment variables to keep them secret
  username = "${INFLUXDB_WRITE_USER}"
  password = "${INFLUXDB_WRITE_USER_PASSWORD}"
  [outputs.influxdb.tagpass]
    subscription = ["slow*"]
