user  nginx;
worker_processes  4;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    gzip  on;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $request_time $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;
    sendfile        on;
    keepalive_timeout  65;

    # rate limiting
    limit_req_zone $binary_remote_addr zone=apilimit:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=pagelimit:10m rate=10r/s;

    server {
        listen 443 ssl default_server;
        # SSL certificate setup - server_name must match CN in certificate
        # TODO replace the server name with your own URL
        server_name <FQDN_HERE>;
        ssl_certificate /etc/nginx/cert.pem;
        ssl_certificate_key /etc/nginx/cert.key;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        location /static {
            root /usr/share/nginx/html;
        }

        # offload static map files
        location ~ ^/map/(.*)$ {
            alias /usr/share/nginx/html/maps/;
            try_files $1.json =404;
        }

        # offload static uplink files
        location ~ ^/uplink/(.*)$ {
            alias /usr/share/nginx/html/uplinks/;
            try_files $1.json =404;
        }

        location /api {
            limit_req zone=apilimit burst=6 nodelay;
            proxy_pass http://weathermap/api;
            proxy_redirect off;
            proxy_set_header X-Real-IP $remote_addr;
        }

        location /api/discover {
            limit_req zone=apilimit burst=4 nodelay;
            proxy_pass http://weathermap/api/discover;
            proxy_redirect off;
            proxy_set_header X-Real-IP $remote_addr;

            # TODO allow only specific IPs/subnets access to the discovery API 
            allow <SUBNET_HERE>;
            deny all;
        }

        location /api/link {
            limit_req zone=apilimit burst=4 nodelay;
            proxy_pass http://weathermap/api/link;
            proxy_redirect off;
            proxy_set_header X-Real-IP $remote_addr;

            # TODO allow only specific IPs/subnets access to the discovery API 
            allow <SUBNET_HERE>;
            deny all;
        }

        location / {
            limit_req zone=pagelimit;
            proxy_pass http://weathermap/;
            proxy_redirect off;
            proxy_set_header X-Real-IP $remote_addr;
        }
    }

    server {
      listen 80;
      server_name _;
      return 301 https://$host$request_uri;
    }
}
